# ===========================================
# üìÖ StoryTelling Calendar - Environment Variables
# ===========================================
# Copy this file to .env and fill in your actual values
# Never commit your .env file to version control!

# ===========================================
# üöÄ SERVER CONFIGURATION
# ===========================================
NODE_ENV=development
PORT=5000

# ===========================================
# üóÑÔ∏è DATABASE CONFIGURATION
# ===========================================
# PostgreSQL connection string
# Format: postgresql://username:password@host:port/database
DATABASE_URL="postgresql://postgres:password@localhost:5432/storytime_calendar"

# ===========================================
# üîê JWT AUTHENTICATION
# ===========================================
# Generate a strong secret key (use: openssl rand -hex 32)
JWT_SECRET="your-super-secure-jwt-secret-key-min-32-characters"
JWT_ACCESS_TOKEN_EXPIRATION=30d
JWT_REFRESH_TOKEN_EXPIRATION=90d

# ===========================================
# üìÖ GOOGLE CALENDAR INTEGRATION
# ===========================================
# Get these from Google Cloud Console > APIs & Services > Credentials
GOOGLE_CLIENT_ID="your-google-oauth-client-id.apps.googleusercontent.com"
GOOGLE_CLIENT_SECRET="your-google-oauth-client-secret"
GOOGLE_REDIRECT_URI="http://localhost:5000/api/v1/calendar/auth/google/callback"

# ===========================================
# üí¨ SLACK INTEGRATION (Optional)
# ===========================================
# Get these from Slack API > Your Apps > OAuth & Permissions
SLACK_CLIENT_ID="your-slack-app-client-id"
SLACK_CLIENT_SECRET="your-slack-app-client-secret"
SLACK_REDIRECT_URI="http://localhost:5000/api/v1/auth/slack/callback"

# ===========================================
# üåê FRONTEND CONFIGURATION
# ===========================================
FRONTEND_URL="http://localhost:3000"

# ===========================================
# üîí ENCRYPTION & SECURITY
# ===========================================
# 64-character hex string for encrypting sensitive data (API keys, tokens)
# Generate with: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
ENCRYPTION_KEY="0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef"

# ===========================================
# üìä MONITORING & OBSERVABILITY (Optional)
# ===========================================
# DataDog configuration for production monitoring
DATADOG_API_KEY=""
DATADOG_HOST=""
DATADOG_SERVICE="storytime-calendar"
DATADOG_REGION="us"

# ===========================================
# ü™µ LOGGING CONFIGURATION
# ===========================================
# Options: error, warn, info, debug
LOG_LEVEL=info

# ===========================================
# üè∑Ô∏è SERVICE IDENTIFICATION
# ===========================================
SERVICE_NAME="storytime-calendar"

# ===========================================
# üß™ DEVELOPMENT & TESTING (Optional)
# ===========================================
# Optional: API rate limiting
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100

# Optional: CORS origins (comma-separated)
CORS_ORIGINS="http://localhost:3000,http://localhost:3001"

# Optional: Cookie settings
COOKIE_SECRET="your-cookie-secret-for-sessions"
COOKIE_SECURE=false
COOKIE_SAME_SITE=lax

# ===========================================
# üöÄ PRODUCTION SETTINGS (When deploying)
# ===========================================
# Uncomment and update these for production deployment

# NODE_ENV=production
# PORT=443
# DATABASE_URL="postgresql://username:password@your-db-host:5432/storytime_calendar_prod"
# FRONTEND_URL="https://your-domain.com"
# GOOGLE_REDIRECT_URI="https://your-domain.com/api/v1/calendar/auth/google/callback"
# SLACK_REDIRECT_URI="https://your-domain.com/api/v1/auth/slack/callback"
# COOKIE_SECURE=true
# CORS_ORIGINS="https://your-domain.com"

# ===========================================
# üìù SETUP INSTRUCTIONS
# ===========================================
#
# 1. Copy this file: cp .env.example .env
# 2. Generate JWT secret: openssl rand -hex 32
# 3. Generate encryption key: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
# 4. Set up PostgreSQL database
# 5. Create Google OAuth app at https://console.cloud.google.com
# 6. Enable Google Calendar API and People API
# 7. Add redirect URIs to Google OAuth settings
# 8. (Optional) Create Slack app at https://api.slack.com/apps
# 9. (Optional) Set up DataDog for monitoring
# 10. Update all placeholder values with your actual credentials
#
# ===========================================
